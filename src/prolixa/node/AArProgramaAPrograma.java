/* This file was generated by SableCC (http://www.sablecc.org/). */

package prolixa.node;

import prolixa.analysis.*;

@SuppressWarnings("nls")
public final class AArProgramaAPrograma extends PAPrograma
{
    private PADeclaracoes _aDeclaracoes_;
    private PAComandos _aComandos_;

    public AArProgramaAPrograma()
    {
        // Constructor
    }

    public AArProgramaAPrograma(
        @SuppressWarnings("hiding") PADeclaracoes _aDeclaracoes_,
        @SuppressWarnings("hiding") PAComandos _aComandos_)
    {
        // Constructor
        setADeclaracoes(_aDeclaracoes_);

        setAComandos(_aComandos_);

    }

    @Override
    public Object clone()
    {
        return new AArProgramaAPrograma(
            cloneNode(this._aDeclaracoes_),
            cloneNode(this._aComandos_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAArProgramaAPrograma(this);
    }

    public PADeclaracoes getADeclaracoes()
    {
        return this._aDeclaracoes_;
    }

    public void setADeclaracoes(PADeclaracoes node)
    {
        if(this._aDeclaracoes_ != null)
        {
            this._aDeclaracoes_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aDeclaracoes_ = node;
    }

    public PAComandos getAComandos()
    {
        return this._aComandos_;
    }

    public void setAComandos(PAComandos node)
    {
        if(this._aComandos_ != null)
        {
            this._aComandos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aComandos_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._aDeclaracoes_)
            + toString(this._aComandos_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._aDeclaracoes_ == child)
        {
            this._aDeclaracoes_ = null;
            return;
        }

        if(this._aComandos_ == child)
        {
            this._aComandos_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._aDeclaracoes_ == oldChild)
        {
            setADeclaracoes((PADeclaracoes) newChild);
            return;
        }

        if(this._aComandos_ == oldChild)
        {
            setAComandos((PAComandos) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
