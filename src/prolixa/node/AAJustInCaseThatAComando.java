/* This file was generated by SableCC (http://www.sablecc.org/). */

package prolixa.node;

import prolixa.analysis.*;

@SuppressWarnings("nls")
public final class AAJustInCaseThatAComando extends PAComando
{
    private PAExp _aExp_;
    private PAComando _corpo_;
    private PAComando _cond_;

    public AAJustInCaseThatAComando()
    {
        // Constructor
    }

    public AAJustInCaseThatAComando(
        @SuppressWarnings("hiding") PAExp _aExp_,
        @SuppressWarnings("hiding") PAComando _corpo_,
        @SuppressWarnings("hiding") PAComando _cond_)
    {
        // Constructor
        setAExp(_aExp_);

        setCorpo(_corpo_);

        setCond(_cond_);

    }

    @Override
    public Object clone()
    {
        return new AAJustInCaseThatAComando(
            cloneNode(this._aExp_),
            cloneNode(this._corpo_),
            cloneNode(this._cond_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAJustInCaseThatAComando(this);
    }

    public PAExp getAExp()
    {
        return this._aExp_;
    }

    public void setAExp(PAExp node)
    {
        if(this._aExp_ != null)
        {
            this._aExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aExp_ = node;
    }

    public PAComando getCorpo()
    {
        return this._corpo_;
    }

    public void setCorpo(PAComando node)
    {
        if(this._corpo_ != null)
        {
            this._corpo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._corpo_ = node;
    }

    public PAComando getCond()
    {
        return this._cond_;
    }

    public void setCond(PAComando node)
    {
        if(this._cond_ != null)
        {
            this._cond_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cond_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._aExp_)
            + toString(this._corpo_)
            + toString(this._cond_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._aExp_ == child)
        {
            this._aExp_ = null;
            return;
        }

        if(this._corpo_ == child)
        {
            this._corpo_ = null;
            return;
        }

        if(this._cond_ == child)
        {
            this._cond_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._aExp_ == oldChild)
        {
            setAExp((PAExp) newChild);
            return;
        }

        if(this._corpo_ == oldChild)
        {
            setCorpo((PAComando) newChild);
            return;
        }

        if(this._cond_ == oldChild)
        {
            setCond((PAComando) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
